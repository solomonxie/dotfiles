#! /bin/bash
#
# MAINTAINER: Solomon Xie <solomonxiewise@gmail.com>
# ENVIRONMENT: Ubuntu / Raspbian / MacOS
#
# Description: Additional configs for zshrc, which aren't good for public.
#
# Env Variables, paths
# Some would be imported here by other programms automatically
# etc., cat 'expot path=...' > ~/.zshrc
# 
#


#------------------------------------------------------
#           Shared Custom Functions
#------------------------------------------------------

do_read_flags(){
    # Set variables from flag passed to this function
    while [ $# -gt 0 ] ;do
        case "$1" in
            "--os")
                OS=$2 
                shift 2;;
            "--src")
                SRC=$2 
                shift 2;;
        esac
    done
}

get_os(){
    if [ -x "$(command -v lsb_release)" ]; then #Linux
        info=$(lsb_release -si)
    elif [ -x "$(command -v sw_vers)" ]; then #MacOS
        info=$(sw_vers -productName)
    elif [ -e /etc/os-release ]; then #Linux (not docker)
        info=$(cat /etc/os-release |grep NAME)
    elif [ -x "$(command -v uname)" ]; then #Linux, docker & Others
        info=$(uname -a)
    fi
    case "$(echo $info | tr '[:upper:]' '[:lower:]')" in
        *mac*) OS="mac" ;;
        *raspbian* | *raspberrypi*) OS="raspbian" ;;
        *ubuntu*) OS="ubuntu" ;;
    esac
    echo $OS
}


do_by_os(){
    case $(get_os) in
        ubuntu)
            echo "CURRENT Linux Distribution: [  Ubuntu  ].";;
        raspbian)
            echo "CURRENT Linux Distribution: [  Raspbian  ].";;
        mac)
            echo "CURRENT OS: [  Mac OS X  ].";;
    esac
}


#------------------------------------------------------
#           Export Custom Env Variables
#------------------------------------------------------

do_read_flags "$@"

export ME=${SUDO_USER:-$(id -un)}
HOUSE="`cat /etc/passwd |grep ^${ME}: | cut -d: -f 6`"
export HOUSE=${HOUSE:-$HOME}
export REPO_URL="git@github.com:solomonxie/dotfiles.git"
export SRC=${SRC:-"$HOUSE/dotfiles"}
export MYOS=${OS:-$(get_os)}

# Download Repo if not exists
if [ ! -e $HOUSE/dotfiles ]; then
    git clone $REPO_URL $HOUSE/dotfiles
fi
