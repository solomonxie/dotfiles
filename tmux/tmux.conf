#""""""""""""""""""""""""""""""""""""""""""
#        _____                            "
#       |_   _| __ ___  _   ___  __       "
#         | || '_ ` _ \| | | \ \/ /       "
#         | || | | | | | |_| |>  <        "
#         |_||_| |_| |_|\__,_/_/\_\       "
#                                         "
#""""""""""""""""""""""""""""""""""""""""""
#
# MAINTAINER: Solomon Xie <solomonxiewise@gmail.com>
# Preload:
#     $ sudo git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#     $ brew install reattach-to-user-namespace
# Commands (After TPM installed):
#     <Prefix>r
#     <Prefix>I
# Debuggings:
#     1. $ tmux kill-server
#     2. $ pkill -9 tmux
#     3. Change mouse options support different tmux version


#<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
# [    TPM - Tmux Plugin Manager (Tmux v1.9+)     ] {
#  --------------List of plugins------------------
    # Hit <Prefix+I> to install plugins
        set -g @plugin 'tmux-plugins/tpm'

    # -> Session: Resurrect+Continuum
        set -g @plugin 'tmux-plugins/tmux-resurrect'
        set -g @plugin 'tmux-plugins/tmux-continuum'
    # -> Copy & paste in SSH (OSX|Linux|Cygwin)
        set -g @plugin 'tmux-plugins/tmux-yank'
    # -> Act with "reattach-to-user-namespace"
        set -g @plugin 'tmux-plugins/tmux-sensible'
    # -> Predefined searches
        set -g @plugin 'tmux-plugins/tmux-copycat'
    # Themes
        # {Themepack}
        set -g @plugin 'jimeh/tmux-themepack'
        set -g @themepack 'powerline/double/magenta'
        # {gruvbox}
        # set -g @plugin 'egel/tmux-gruvbox'
# }
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>


#######################################################################
#                           BASIC SETTINGS                            #
#######################################################################
# [  GENERAL SETTINGS  ]------------------------------------------{
        #{Terminal type configuration}
        #set -g default-terminal "screen-256color"
        # set -g default-terminal "xterm-256color"     # recover colorful terminal
        set -g default-terminal "screen-256color"
        set -ga terminal-overrides ",xterm-256color:Tc"
        #{Others}
        set -g display-time 3000
        set -g display-panes-time 3000
        set -g escape-time 0
        set -g history-limit 65535
        set -g base-index 1
        set -g pane-base-index 1
        set-option -g allow-rename off  # don't rename windows automatically
        #set-clipboard on #Enable clipboard copy

        #{Restore Namespace}
        # tmux会话中，Mac的部分命令如 osascript、open、pbcopy 或 pbpaste等
        #可能会失效（失效命令未列全）
        #对此，我们可以通过安装reattach-to-user-namespace包装程序来解决这个问题
        if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"'

        # Turn on focus event for some vim plugins
        set -g focus-events on
# }




#######################################################################
#                       KEY BINDINGS / MAPPINGS                       #
#######################################################################
# [ Key Binding / Mappings ]--------------{
    # Leader key / Prefix key -> needs 3 steps
    # Can be: Ctrl-b, Ctrl-f, Alt-f.....
        set -g prefix 'C-q'   # Major Prefix
        #set -g prefix 'C-f'   # Major Prefix
        bind 'C-q' send-prefix
        set -g prefix2 'C-b'  # Secondary Prefix
        #unbind C-b  # Disable default Prefix
        # Conflicts:
        # C-b/o/h/m/l/e/f/g/o/[/] => VIM; C-d with Shell; C-a/s ambiguous.
    # Sorucing config file
        bind r source-file ~/.tmux.conf \; display-message "Config reloaded.."
    # Window navigation
        #bind -r M-n previous-window
        #bind -r M-N next-window
        # bind-key -n C-0 select-window -t :0
        # bind-key -n C-1 select-window -t :1
        # bind-key -n C-2 select-window -t :2
        # bind-key -n C-3 select-window -t :3
        # bind-key -n C-4 select-window -t :4
        # bind-key -n C-5 select-window -t :5
        # bind-key -n C-6 select-window -t :6
        # bind-key -n C-7 select-window -t :7
        # bind-key -n C-8 select-window -t :8
        # bind-key -n C-9 select-window -t :9
        # OR
        # C-1: ^[[27;5;49~
        # C-2: ^[[27;5;50~
        # C-3: ^[[27;5;51~
        # C-4: ^[[27;5;52~
        # C-5: ^[[27;5;53~
        # C-6: ^[[27;5;54~
        # C-7: ^[[27;5;55~
        # C-8: ^[[27;5;56~
        # C-9: ^[[27;5;57~
        # C-0: ^[[27;5;48~
    # Pane navigation  (without -r key repeat)
        bind k select-pane -U # k -- ↑
        bind j select-pane -D # j -- ↓
        bind h select-pane -L # h -- ←
        bind l select-pane -R # l -- →
    # Pane Edit
        unbind '"'
        # Vertical split & enter
        bind | splitw -v -c '#{pane_current_path}' # \; send-keys "printf '\\033]2;TITLE\\033\\\\'" Enter
        unbind %
        # Horizontal split & enter
        bind - splitw -h -c '#{pane_current_path}' # \; send-keys "printf '\\033]2;TITLE\\033\\\\'" Enter
        bind-key Q kill-pane
    # Statusbar
        bind-key c new-window -n 'Wo'
    # Scroll back buff (history)
        bind-key C-k send-keys -R \; send-keys C-l \; clear-history
        #bind -n C-i send-keys -R \; send-keys C-l \; clear-history
        #bind-key C-k send-keys C-l
        #bind-key C-l send-keys C-l
# }



# [  Vi-mode  ]----------------------{
    setw -g mode-keys vi  # Enable Vi mode
    bind-key -t vi-copy v begin-selection
    bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
    bind-key -T copy-mode-vi 'v' send -X begin-selection
    bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
# }


#######################################################################
#                         PERISSTENT SESSIONS                         #
#######################################################################
# [  Tmux-Resurrect + Tmux-Continuum  ]----------------------{
    # Huge Bug, & 生成大批量文件 (慎用)  {
        #set -g @resurrect-save-bash-history 'on'  # 保存命令历史
        #set -g @resurrect-capture-pane-contents 'on'  # 保存屏幕内容
    # }
        set -g @resurrect-strategy-vim 'session'
    # tmux-continuum
        set -g @continuum-restore 'on'
        set -g @continuum-save-interval '1' # Interval of saving session
# }


#######################################################################
#                            MOUSE SUPPORT                            #
#######################################################################
# [  VERSION SPECIFIC SETTINGS  ]-------------------------------{
    # Version-specific commands [grumble, grumble]
    # See: https://github.com/tmux/tmux/blob/master/CHANGES
    # Contributer: @Tom Hale from Stackoverflow
    run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
    if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
      "set -g mouse-select-pane on; set -g mode-mouse on; \
        set -g mouse-resize-pane on; set -g mouse-select-window on"
    # (tmux >= 2.1) "mouse" replaced the previous 4 mouse options
    if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
      "set -g mouse on"
    # UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
    if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
      "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"
    # bind-key syntax changed in 2.4
    if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
      "bind-key -t vi-copy v   begin-selection; \
       bind-key -t vi-copy V   select-line; \
       bind-key -t vi-copy C-v rectangle-toggle; \
       bind-key -t vi-copy y   copy-pipe 'xclip -selection clipboard -in'"
    # Newer versions
    if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
      "bind-key -T copy-mode-vi v   send -X begin-selection; \
       bind-key -T copy-mode-vi V   send -X select-line; \
       bind-key -T copy-mode-vi C-v send -X rectangle-toggle; \
       bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"
    ## (tmux v2.1+)
    if-shell -b '[ "$(echo $TMUX_VERSION)" == "2.9a" ]' \
        "set-option -g mouse on"
    ## (Before tmux 2.1)
        #setw -g mouse-resize-pane on
        #setw -g mouse-select-pane on
        #setw -g mouse-select-window on
        #setw -g mode-mouse on
        #set-window-option -g mode-mouse on
# }



#######################################################################
#                           TMUX UI DESIGN                            #
#######################################################################

# [  Status bar  ]--------------------{{{
        set -g status-bg black
        set -g status-fg white
        set-option -g status-justify centre
    # <LEFT-PART>
        set-option -g status-left '#[fg=cyan][#{session_name}]'
        set-option -g status-left-length 25
    # <RIGHT-PART>
        set-option -g status-right '#[fg=white,bg=default]%H:%M #[default] #[fg=blue]%Y-%m-%d %a (#{continuum_status}m)'

    # window
        setw -g automatic-rename off
        set-option -g allow-rename off  # Has to be OFF!!!
        # set-window-option -g window-status-fg brightblue
        # set-window-option -g window-status-bg default
        set-window-option -g window-status-current-style fg='#333333',bg="#ff9966"
        # Clock
        set-window-option -g clock-mode-colour black
        set-window-option -g clock-mode-style 24

        set-window-option -g monitor-activity on
        set-window-option -g visual-bell off
        #set-window-option -g bell-action other

    # message text
        set-option -g message-style fg=colour5
        set-option -g message-style bg=colour232
# }


# [  Pane  ]--------------------{
    # Pane settings
        # set-option -g pane-border-fg colour27
        # set-option -g pane-active-border-fg colour9
        set-option -g display-panes-active-colour blue
        set-option -g display-panes-colour brightred

        # Pane Border title
        set -g pane-border-status top
        # Make a title on each pane (inbetween the pane split line, pretty neat)
        # set -g pane-border-format " #P: #T #{pane_current_command} #{pane_name}"
        set -g pane-border-format " [#P] #T "
        # Or execute this in shell of the pane to manually change:  (start&end are must)
        #   printf '\033]2;%s\033\\' 'title goes here'

        # Pane border color
        # set -g pane-border-bg default
        # set -g pane-border-fg $bgcolor
        # set -g pane-active-border-bg default
        # set -g pane-active-border-fg $bgcolor
        # set -g display-panes-colour default
        # set -g display-panes-active-colour default
# }




#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
# (keep this line at the very bottom of tmux.conf)
# Initialize TMUX plugin manager
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins'
run '~/.tmux/plugins/tpm/tpm'
