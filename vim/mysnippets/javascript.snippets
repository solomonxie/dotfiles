
snippet	func
function func(a, b) {
	// do something
}
endsnippet

snippet	func_arrow
func(obj, (a, b) => {
	// do something
});
endsnippet

snippet log
console.log(${1:${VISUAL:something}});
endsnippet

snippet err
console.error(${1:${VISUAL:something}});
endsnippet

snippet fs
const fs = require('fs');
endsnippet

snippet readJson
const fs = require('fs');
const content = fs.readFileSync('${1:${VISUAL:path_to_file}}', 'utf-8');
console.log(content);
endsnippet

snippet writeJson
const fs = require('fs');
fs.writeFileSync('${1:${VISUAL:path_to_file}}', JSON.stringfy(obj), {flag: 'w'});
endsnippet

snippet dbg "debugger;"
debugger;
endsnippet

snippet asyncanonymous
(async () => {
	// MY CODE...
})();
endsnippet

snippet	puppeteer_hello_word
const puppeteer = require('puppeteer');

(async () => {
    debugger;
    const browser = await puppeteer.launch({headless: false});
    const page = await browser.newPage();
    await page.goto('https://www.baidu.com');
    let res, inputBox, btnSubmit;
    res = await page.$x("//input[@id='kw']");
    if (res.length > 0) inputBox = res[0];
    res = await page.$x("//input[@id='su']");
    if (res.length > 0) btnSubmit = res[0];
    await inputBox.click();
    await page.keyboard.type('hello', {delay: 2000});
    await btnSubmit.click();
    await browser.close();
    debugger;
})();
endsnippet

snippet ifmain
if (require.main == module) {
    console.log('[ START ]')
	// MY CODE...
    console.log('[ END ]')
}
endsnippet


snippet funcasync
const ${1:${VISUAL:myfunc}} = async () => {
	// MY CODE...
};
endsnippet

snippet asyncfunc
async function ${1:${VISUAL:myfunc}}() {
	// MY CODE...
}
endsnippet

snippet export
module.exports = {
	${1:${VISUAL:myfunc}}: ${2:${VISUAL:myfunc}},
};
endsnippet

snippet sleep
const sleep = ms => new Promise(res => setTimeout(res, ms));
await sleep(2000);
endsnippet

snippet export_async_func
module.exports.init_page = async function myfunc() {
	// MY CODE...
};
endsnippet


snippet try
try {
	// MY CODE...
} catch (e) {console.warn(e)}
endsnippet
