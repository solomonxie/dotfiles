snippet if_file_exist
if [[ -e ${1:file_path} ]];then
	do_something_with $1
fi
endsnippet


snippet if_empty_variable
if  [[ "\$${1:variable}" == "" ]]; then
	echo OK.
fi
endsnippet


snippet if_multi_expression
if  [[ "\$${1:variable}" != "" ] && [ "\$${2:variable}" != "" ]]; then
	echo OK.
fi
endsnippet


snippet if_command_exists
if  [[ -x "$(command -v ${1:command})" ]]; then
	echo OK.
fi
endsnippet


snippet if_is_a_file
if [[ -f ${1:condition} ]];then
	echo OK.
fi
endsnippet


snippet for
for fn in $(ls); do
	echo fn
done
endsnippet


snippet while
while [ ${1:variable} -gt 0 ]; do
	echo OK.
	shift $(( ${1} > 0 ? 1 : 0 ))
done
endsnippet


snippet function
${1:function_name}(){
	${2:echo Ok.}
}
endsnippet


snippet switch
case ${1:$Variable} in
	${2:value1})
		echo 1
		;;
	${3:value2})
		echo 2
		;;
esac
endsnippet


snippet path
export PATH="${1:new_path}:$PATH"
endsnippet


snippet findfile
	find . -type f -name "*"
endsnippet


snippet echo_multi_lines
cat <<- EOF
	${1:some words}
EOF
endsnippet


snippet write_multi_lines
cat <<- EOF > ${1:file_path}
	${2:some_words}
EOF
endsnippet
