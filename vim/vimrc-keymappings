" [   Key Mappings / Bindings   ]----------------------------{
    "<Leader key>
        let mapleader = ","
        let maplocalleader = "\\"

    "<Undefined>
        noremap - <Nop>
        noremap = <Nop>

    "<Files>
        "Save file
        "noremap  <Leader>s <ESC>:w<CR><ESC>
        "Save & Exit
        noremap  <C-x> <ESC>:x<CR><ESC>
        noremap <Leader>j :jumps<CR>
        noremap <LocalLeader>o :next *<CR>
        noremap <Leader>O :silent exec "!open %"<CR>

    "<Navigation>
        "{Go-next-call}
        "nnoremap m yiw/<C-r>0<CR>
        "{Go-definition}
        nnoremap gd gd
        vnoremap <Leader>gd y/<C-r>0<CR>
        "{Highlight all current word}
        "nnoremap * #
        "nnoremap # *
        " Jump to parent bracket/level
        nnoremap <C-[> [{
        nnoremap <C-o> <C-o>
        nnoremap <C-i> <C-i>

    "<Edit> -> <Tab> default set to <C-i>, but remap not working
        noremap  <C-c> <Esc>:nohl<CR><ESC>
        inoremap <C-c> <Esc>
        "nnoremap <Space> viw
        "nnoremap <Space> V
        "nnoremap <Return> vip
        "
        "inoremap jj <esc>
        "map q <NOP>
        "noremap <Leader>,r q
        nnoremap <Leader>aa :ggVG<CR>
        nnoremap <Leader>ay :%y+<CR>
        nnoremap <Leader>ad :%d+<CR>
        "nnoremap g- ''
        "{Replace-all}
        noremap <Leader>ra y:% s/<C-r>0/<C-r>0/gc<Left><Left><Left>
        "{ctrl-v paste reg:0}
        inoremap <C-v> <C-r>0

    "<Split>
        "noremap S :vsplit<CR><C-w>l<ESC>:bn<CR><ESC>
        noremap S :vsplit<CR><C-w>l
        "{vimrc-edit}
        "nnoremap <Leader>ve :tabnew<CR>:source ~/dotfiles/vim/workspace.vim<CR>:tabnext<CR>
        nnoremap <Leader>ve :tabnew<CR>:source ~/dotfiles/vim/workspace.vim<CR>
        "nnoremap <Leader>ve :split<CR><C-w>j<ESC>:e ~/dotfiles/vim/vimrc<CR>
        "{vimrc-keymapping}
        "nnoremap <Leader>vk :split<CR><C-w>j<ESC>:e ~/dotfiles/vim/vimrc-keymappings<CR>
        "{vimrc-plugin}
        "nnoremap <Leader>vp :split<CR><C-w>j<ESC>:e ~/dotfiles/vim/vimrc-plugins<CR>
        "{vimrc-ui}
        "nnoremap <Leader>vu :split<CR><C-w>j<ESC>:e ~/dotfiles/vim/vimrc-ui<CR>

    "<Buffer>
        "Close buffer
            "noremap <Leader>q :windo bdelete<CR><ESC>
            noremap <Leader>q :bdelete<CR><ESC>
            "noremap <Leader>q :bprev \| bd# <CR>
        "Move between buffers
            noremap <Leader>bh :bprev<CR>
            noremap <Leader>bl :bnext<CR>
            noremap <Leader>h :bprev<CR>
            noremap <Leader>l :bnext<CR>
        "History search
            "noremap <Leader><C-h> :browse oldfiles<CR>
            "noremap <Leader><C-h> :History<CR>
        "Change pwd/Current Directory to be same with buffer
            nnoremap <Leader>c :cd %:p:h<CR>

    "<Tab>
        "Builtin: gt/gT
        nnoremap tc :tabnew<CR>
        nnoremap tn :tabnext<CR>
        nnoremap tp :tabprev<CR>
        nnoremap tf :tabfirst<CR>
        nnoremap tl :tablast<CR>
        nnoremap tq :windo bdelete<CR>
        "nnoremap tq :tabclose<CR>
        nnoremap <C-l> :tabnext<CR>
        nnoremap <C-h> :tabprev<CR>
        nnoremap <Leader>0 :tablast<CR>
        nnoremap <Leader>1 :tabfirst<CR>
        nnoremap <Leader>2 :tabn 2<CR>
        nnoremap <Leader>3 :tabn 3<CR>
        nnoremap <Leader>4 :tabn 4<CR>
        nnoremap <Leader>5 :tabn 5<CR>

    "<Window>
        "noremap m <C-w>
        "noremap H <C-w>h
        "noremap L <C-w>l
        "nnoremap <Tab> <C-w>w
        noremap <M-h> <C-w>h
        noremap <M-l> <C-w>l
        noremap <M-j> <C-w>j
        noremap <M-k> <C-w>k
        "noremap <Leader>o <C-w>o
        "noremap <Leader>qw <C-w>c
        "noremap <Leader>Q :qa<CR>

    "<Terminal>
        noremap <Leader>ot :bot split \| resize 10 \| terminal<CR>i
        "tnoremap <ESC> <C-\><C-n>
        "tnoremap <C-c><C-c> <C-\><C-n>
        "tnoremap <C-q> <C-c><C-u><C-k>exit 0;<CR>
        "tnoremap <C-q> <C-\><C-n>:bd!<CR>
        "tnoremap <Leader>q <C-w>:q!<CR>

    "<Spelling>
        noremap <LocalLeader>! :setlocal spell spelllang=en,en_us,cjk<CR>
        noremap <LocalLeader>@ :setlocal nospell<CR>

    "<Clipboard>
        "Copy current register to system clipboard
        vnoremap <Leader>y "+y
        vnoremap ; "+y
        "Copy system clipboard to current register
        noremap <Leader>p "+p
        "noremap <Leader>" :reg<CR>

    "<Folding>
        "noremap <space> za
        "noremap <Leader><return> zR
        "noremap <Leader><space> zM
        "Press space to toggle folding
        "nnoremap <space> @=((foldclosed(line('.')) < 0) ? 'zc' : 'zo')<CR>
        "nnoremap <return> za

    "<Highlights> -> Highlight when typing commands
        noremap n :set hlsearch<cr>n
        noremap N :set hlsearch<cr>N
        noremap / :set hlsearch<cr>/
        noremap ? :set hlsearch<cr>?
        noremap * *:set hlsearch<cr>

    "[Session]----------------------------------{
        function! AutoSaveSession()
            if bufnr('%') < 4
                return
            endif
            if isdirectory('.git')
                :mksession! .git/workspace.vim
                ":echo 'Save session to .git/workspace.vim'
            elseif isdirectory('../.git')
                :mksession! ../.git/workspace.vim
                ":echo 'Save session to ../.git/workspace.vim'
            elseif isdirectory(expand('~/.vim'))
                :mksession! ~/.vim/session.vim
                ":echo 'Save session to ~/.vim/session.vim'
            endif
        endfunction

        function! AutoLoadSession()
            if filereadable(expand('workspace.vim'))
                :source workspace.vim
                ":echo 'Load session from workspace.vim'
            elseif filereadable(expand('.git/workspace.vim'))
                :source .git/workspace.vim
                ":echo 'Load session from .git/workspace.vim'
            elseif filereadable(expand('../.git/workspace.vim'))
                :source ../.git/workspace.vim
                ":echo 'Load session from ../.git/workspace.vim'
            elseif filereadable(expand('~/.vim/session.vim'))
                :source ~/.vim/session.vim
                ":echo 'Load session from ~/.vim/session.vim'
            endif
        endfunction
        autocmd VimLeave * call AutoSaveSession()
        "autocmd VimEnter * call AutoLoadSession()

        " Save session
        noremap <Leader>S :mksession! ~/.vim/session.vim<CR><ESC>
        " Load session
        "noremap <Leader>R :source ~/.vim/session.vim<CR><ESC>
        noremap <Leader>R :call AutoLoadSession()<CR>
    " }


    "<Builds/Compiles>----{
        " Get current filetype -> :echo &filetype or as variable &filetype
        " [ Builds / Compiles / Interpretes  ]
        "<C/C++ Compiler>  -> Compile & run
            autocmd BufReadPre *.c noremap <buffer> <M-b> :w<CR>:!gcc % -o /tmp/a.out && /tmp/a.out <CR>
            autocmd BufReadPre *.cpp noremap <buffer> <M-b> :w<CR>:!g++ % -o /tmp/a.out && /tmp/a.out <CR>

        "<Python Interpreter>
            autocmd BufReadPre *.py noremap <buffer> <M-b> :w<CR>:!python "%:p" <CR>
            "autocmd BufReadPre *.py noremap <buffer> K yiw:!pydoc <C-r>0<CR>
        "<Bash Script>
            autocmd BufReadPre *.sh noremap <buffer> <M-b> :w<CR>:!bash % <CR>

        "<RCs> (Configs)
            autocmd BufReadPre .vimrc,vimrc* noremap <buffer> <M-b> :w<CR>:source % <CR>
            autocmd BufReadPre .zshrc,zshrc* noremap <buffer> <M-b> :w<CR>:!source % <CR>

        "<Executable>  -> conflict with above
        ""noremap <buffer> <C-u> :!./% <CR>
        ""noremap <buffer> <C-u> :! %:p <CR>

        ">Use FileType group
        "autocmd FileType vim,tmux noremap <buffer> <C-u> :w<CR><ESC>:source % <CR>
        "autocmd FileType zsh noremap <buffer> <C-u> :w<CR>:!source % <CR>
        "autocmd FileType sh noremap <buffer> <C-u> :w<CR>:!bash % <CR>
        "autocmd FileType python noremap <buffer> <C-u> :w<CR>:!python % <CR>
        "autocmd FileType c noremap <buffer> <C-u> :w<CR>:!gcc % && ./a.out <CR>
        "autocmd FileType cpp noremap <buffer> <C-u> :w<CR>:!g++ % && ./a.out <CR>
    " }

    "<NetRW> -> (Lexplore/Vexplore/Texplore/Explore/Sexplore/edit.)
        "nnoremap <Leader>f :Lexplore<CR>
        "nnoremap <Leader>f :Explore<CR>
        "nnoremap <Leader>f :edit.<CR>

    "<Omni Autocomplete> -> Vim自带的Omni自动补全
        "inoremap <C-d> <C-x><C-l>
        "inoremap ' ''<Esc>i
        "inoremap " ""<Esc>i
        "inoremap ( ()<Esc>i
        "inoremap [ []<Esc>i
        "inoremap { {}<Esc>i

    "<Plugins>------------------------------------{
        "[Plugin Manager]
            "noremap <localleader>i :PlugInstall<CR>

        "[tig-explorer]
            "nnoremap <localleader>g :Tig<CR>
            "nnoremap <localleader>G :TigOpenCurrentFile<CR>
        "[vimagit]
            "let g:magit_show_magit_mapping='<Leader>G'
            "let g:magit_show_magit_mapping='<Leader>g'

        "[tagbar] ->  "*"->open all folds; "="->close all folds
            "noremap <Leader>t :TagbarToggle<CR>=<ESC>
            noremap T :TagbarOpen<CR>

        "[nnn]
            "nnoremap <LocalLeader>F :NnnPicker<CR>
        "[ranger]
            let g:ranger_map_keys = 0
            "nnoremap <Leader>F :Ranger<CR>

        "[vim-zoom]
            "nmap mm <Plug>(zoom-toggle)

        "[Syntastic]
            nnoremap <C-n> :lnext<CR>
            nnoremap <C-p> :lprevious<CR>
            nnoremap <LocalLeader>s :SyntasticCheck<CR>

        "[Undotree]
            "nnoremap <LocalLeader>d :UndotreeToggle<CR>:UndotreeFocus<CR>

        "[Auto-pair]
            "imap <C-d> <Meta>
            "imap <C-d>e <M-e>

        "[fzf]
            nnoremap <C-f> :Lines<CR>
            "nnoremap <localleader>f :Files %:p:h<CR>
            nnoremap <localleader>f :Files<CR>
            nnoremap <localleader>H :Helptags<CR>
            nnoremap <localleader>h :History<CR>
            nnoremap <localleader>c :History:<CR>
            nnoremap <localleader>/ :History/<CR>
            nnoremap <localleader>b :Buffers<CR>
            nnoremap <localleader>p :Snippets<CR>
            nnoremap <localleader>C :BCommits<CR>
            nnoremap <localleader>t :BTags<CR>
            nnoremap <localleader>T :Tags<CR>
            nnoremap <localleader>a :Ag<CR>
            nnoremap <localleader>m :Marks<CR>
            "nnoremap <localleader>p/ :Files ..
            "nnoremap <localleader>color/ :Colors
            "nnoremap <localleader>k/ :Maps<CR>
        "[Command-T File Searching]
            "nnoremap <localleader>/ :CommandT<CR>
            "nnoremap <localleader>c :CommandT<CR>

        "[Nerdtree]
            "nnoremap <Leader>f :NERDTreeFocus<CR>
            "nnoremap <Leader>f :NERDTreeToggle<CR>
            " Add '%' for changing root accordingly
            "nnoremap <Leader>f :NERDTree %:p:h<CR>
            nnoremap <Leader>f :NERDTree<CR>
            nnoremap <Leader>F :NERDTree %:p:h<CR>
        "[Nerdtree Tabs]
            " Shift Tabs
            "nnoremap <C-h> gt
            "nnoremap <C-l> gT
            " New Tab
            "nnoremap <Leader>t :tabe<CR>
            " Close Tab
            "nnoremap <Leader>c :tabc
        "[NerdCommenter]
            map <Leader>/ :normal ,cc<CR>
            "map <Leader>/ :normal ,cu<CR>
            "map <Leader>/ :normal ,ci<CR>
    " }
" }

